name: Content Sync and Deploy

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main", "copilot/fix-f0676fb1-cdd3-491f-84e5-ba80c9ff4f5f"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      force_sync:
        description: 'Force complete content synchronization'
        required: false
        default: 'false'
        type: boolean

  # Scheduled sync every day at 6 AM UTC
  schedule:
    - cron: '0 6 * * *'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Content synchronization job
  sync-content:
    runs-on: ubuntu-latest
    outputs:
      content-updated: ${{ steps.sync.outputs.updated }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install axios cheerio sharp fs-extra js-yaml
          
      - name: Sync External Content
        id: sync
        run: |
          node .github/scripts/sync-content.js
        env:
          FORCE_SYNC: ${{ github.event.inputs.force_sync }}
          
      - name: Optimize Images
        if: steps.sync.outputs.updated == 'true'
        run: |
          node .github/scripts/optimize-images.js
          
      - name: Commit and Push Changes
        if: steps.sync.outputs.updated == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Auto-sync: Update content from external sources" || exit 0
          git push

  # Build job
  build:
    runs-on: ubuntu-latest
    needs: sync-content
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
          cache-version: 0

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Install additional gems
        run: |
          bundle add jekyll-feed jekyll-sitemap jekyll-seo-tag

      - name: Build with Jekyll
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4